// <auto-generated />
using Avansight.Domain.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Avansight.Domain.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221224142301_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Avansight.Domain.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("StudyId")
                        .HasColumnType("int");

                    b.Property<string>("TreatmentCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PatientId");

                    b.HasIndex("StudyId")
                        .IsUnique();

                    b.HasIndex("TreatmentCode")
                        .IsUnique()
                        .HasFilter("[TreatmentCode] IS NOT NULL");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Avansight.Domain.Models.Study", b =>
                {
                    b.Property<int>("StudyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ProjectNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudyId");

                    b.ToTable("Studies");
                });

            modelBuilder.Entity("Avansight.Domain.Models.TreatmentGroup", b =>
                {
                    b.Property<string>("TreatmentCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TreatmentColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TreatmentCode");

                    b.ToTable("TreatmentGroups");
                });

            modelBuilder.Entity("Avansight.Domain.Models.Patient", b =>
                {
                    b.HasOne("Avansight.Domain.Models.Study", "Study")
                        .WithOne("Patient")
                        .HasForeignKey("Avansight.Domain.Models.Patient", "StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Avansight.Domain.Models.TreatmentGroup", "TreatmentGroup")
                        .WithOne("Patient")
                        .HasForeignKey("Avansight.Domain.Models.Patient", "TreatmentCode");

                    b.Navigation("Study");

                    b.Navigation("TreatmentGroup");
                });

            modelBuilder.Entity("Avansight.Domain.Models.Study", b =>
                {
                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Avansight.Domain.Models.TreatmentGroup", b =>
                {
                    b.Navigation("Patient");
                });
#pragma warning restore 612, 618
        }
    }
}
